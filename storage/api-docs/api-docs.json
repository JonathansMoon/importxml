{
    "openapi": "3.0.0",
    "info": {
        "title": "Invillia Challenge",
        "version": "0.1"
    },
    "paths": {
        "/api/auth/login": {
            "post": {
                "tags": [
                    "auth"
                ],
                "summary": "Sign in",
                "description": "Login by email, password",
                "operationId": "authLogin",
                "requestBody": {
                    "description": "Pass user credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "desafio@gmail.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "422": {
                        "description": "Wrong credentials response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Sorry, wrong email address or password. Please try again"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/person": {
            "get": {
                "tags": [
                    "protected"
                ],
                "summary": "Json of persons",
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "401": {
                        "description": "Authorization Token not found"
                    },
                    "500": {
                        "description": "internal server error"
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/shiporder": {
            "get": {
                "tags": [
                    "protected"
                ],
                "summary": "Json of shiporder",
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "401": {
                        "description": "Authorization Token not found"
                    },
                    "500": {
                        "description": "internal server error"
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "securitySchemes": {
            "apiAuth": {
                "type": "http",
                "description": "Login with email and password to get the authentication token",
                "name": "Token based Based",
                "in": "header",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "security": {
        "bearer": {
            "type": "http",
            "description": "Authorization token obtained from logging in.",
            "name": "Authorization",
            "in": "header",
            "scheme": "bearer"
        }
    }
}